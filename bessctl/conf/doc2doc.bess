import scapy.all as scapy
import time

#v = VPort(loopback=1, rxq_cpus=[1])
v1 = VPort(ifname='eth_vport1', docker='ctr1', ip_addrs=['10.255.99.2/24'])
v2 = VPort(ifname='eth_vport2', docker='ctr2', ip_addrs=['10.255.99.3/24'])


start_time = time.time()
last_time = start_time

PortInc(port=v1) -> Timestamp(offset=42) -> L4Checksum() -> PortOut(port=v2)
PortInc(port=v2) -> m::Measure(offset=42) -> PortOut(port=v1)
bess.resume_all()


















print('{} RTT (us)                             '.format(' ' * 41), end='')
print('   jitter (us)')
print('{}    avg    min    50%    99%      max '.format(' ' * 41), end='')
print('      avg    min    50%    99%      max')

while True:
    time.sleep(1)

    # get_summary() doesn't require workers to be stopped
    ret = m.get_summary(clear=True,  # reset stats every interval
                        latency_percentiles=[50, 99],
                        jitter_percentiles=[50, 99])

    diff_ts = ret.timestamp - last_time
    diff_pkts = ret.packets / diff_ts
    diff_bits = ret.bits / diff_ts
    last_time = ret.timestamp

    print('%12.6f: %5.3f Mpps, %8.3f Mbps, ' \
          '%7.3f %6.1f %6.1f %6.1f %8.1f'   %
          (ret.timestamp - start_time,
           diff_pkts / 1e6,
           diff_bits / 1e6,
           ret.latency.avg_ns,
           ret.latency.min_ns,
           ret.latency.percentile_values_ns[0],
           ret.latency.percentile_values_ns[1],
           ret.latency.max_ns))
